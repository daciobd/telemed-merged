name: e2e

on:
  push:
    branches:
      - main
      - 'release/**'
  pull_request:
  workflow_dispatch:

jobs:
  e2e:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: |
            package-lock.json
            telemed-merged/package-lock.json
            telemed-docs-automation/package-lock.json

      - name: Install deps root
        run: npm ci

      - name: Install deps docs automation
        shell: bash
        run: |
          set -e
          if [ -f "telemed-docs-automation/package-lock.json" ]; then
            cd telemed-docs-automation
            npm ci
          elif [ -f "telemed-docs-automation/package.json" ]; then
            cd telemed-docs-automation
            npm install --include=dev
          fi

      - name: Install deps root
        run: npm ci

      - name: Install deps telemed-merged
        working-directory: telemed-merged
        run: npm ci

      - name: Install Playwright (browsers + deps)
        run: npx playwright install --with-deps

      - name: Verify server entrypoint path
        run: |
          pwd
          ls -la apps/telemed-deploy-ready | grep -E "(server|index)" 
          test -f apps/telemed-deploy-ready/server.js && echo "server.js FOUND" || (echo "server.js NOT FOUND" && exit 1)
          echo "telemed-merged start script should work: npm run start from telemed-merged/ -> ../apps/telemed-deploy-ready/server.js"

      - name: Sanity @playwright/test at root
        run: |
          node -e "const p=require('./package.json'); console.log('devDep @playwright/test:', p.devDependencies?.['@playwright/test']||'MISSING')"
          test -f node_modules/@playwright/test/package.json && echo "node_modules/@playwright/test OK" || (echo "MISSING node_modules/@playwright/test" && exit 1)
          node -e "console.log('resolve:', require.resolve('@playwright/test/package.json'))"

      - name: Build
        working-directory: telemed-merged
        run: npm run build --if-present

      - name: Start docs automation
        shell: bash
        run: |
          set -euo pipefail
          PIDFILE="$GITHUB_WORKSPACE/server.pid"
          echo "üöÄ Starting TeleMed Docs Automation Service..."
          npx -y tsx telemed-docs-automation/src/index.ts &
          echo $! > "$PIDFILE"
          sleep 2

      - name: Run Playwright tests
        run: npx --no-install playwright test

      - name: Stop servers
        if: always()
        shell: bash
        run: |
          set +e
          PIDFILE="$GITHUB_WORKSPACE/server.pid"
          if [ -f "$PIDFILE" ]; then
            kill "$(cat "$PIDFILE")" || true
            rm -f "$PIDFILE"
          else
            echo "‚ÑπÔ∏è No PID file to stop."
          fi