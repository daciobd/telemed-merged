name: CI

on:
  pull_request:
  push:
    branches: [ main ]

jobs:
  e2e:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    defaults:
      run:
        working-directory: telemed-merged

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: telemed-merged/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Start server.js (porta 3000)
        run: |
          node ../server.js &
          echo $! > server.pid
          for i in {1..30}; do
            curl -fsS http://localhost:3000/health.json && break
            sleep 1
          done
        continue-on-error: true

      - name: Wait for server (ou fallback)
        run: |
          if ! curl -fsS http://localhost:3000 >/dev/null 2>&1; then
            echo "No server at :3000 - using fallback :5173"
            npx http-server -p 5173 ../. &
            echo $! > server.pid
            export BASE_URL=http://localhost:5173
          else
            export BASE_URL=http://localhost:3000
          fi
          echo "BASE_URL=$BASE_URL" >> $GITHUB_ENV

      - name: Run Playwright tests
        env:
          BASE_URL: ${{ env.BASE_URL }}
        run: npx playwright test

      - name: Upload Playwright report (on failure)
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report

      - name: Stop server
        if: always()
        run: kill $(cat server.pid) || true
