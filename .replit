modules = ["nodejs-20", "web", "postgresql-16"]
run = "npm run dev"
hidden = [".config", ".git", "generated-icon.png", "node_modules", "dist"]

[nix]
channel = "stable-24_05"
packages = ["jq", "unzipNLS", "chromium", "try", "gh", "nix", "openssh"]

[deployment]
deploymentTarget = "autoscale"
build = ["sh", "-c", "bash -lc ' set -e # instala deps no root (com fallback se n√£o houver lockfile) if [ -f package-lock.json ] || [ -f npm-shrinkwrap.json ]; then   npm ci --include=dev else   npm install --include=dev fi  # build do TeleMedMerge (root) npm run build || (vite build && esbuild server/index.ts --platform=node --packages=external --bundle --format=esm --outdir=dist) '"]
run = ["sh", "-c", "bash -lc 'node production.js'"]

[[ports]]
localPort = 5000
externalPort = 80

[[ports]]
localPort = 33333
externalPort = 8000

[[ports]]
localPort = 33569
externalPort = 5173

[[ports]]
localPort = 35569
externalPort = 6000

[[ports]]
localPort = 36215
externalPort = 6800

[[ports]]
localPort = 37101
externalPort = 3000

[[ports]]
localPort = 37727
externalPort = 4200

[[ports]]
localPort = 38607
externalPort = 3002

[[ports]]
localPort = 39473
externalPort = 3003

[[ports]]
localPort = 44015
externalPort = 3001

[[ports]]
localPort = 44469
externalPort = 5000

[env]
PORT = "5000"

[workflows]
runButton = "Project"

[[workflows.workflow]]
name = "Project"
mode = "parallel"
author = "agent"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "Start application"

[[workflows.workflow]]
name = "Start application"
author = "agent"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "npm run dev"
waitForPort = 5000

[agent]
integrations = ["javascript_database:1.0.0", "javascript_auth_all_persistance:1.0.0", "javascript_object_storage:1.0.0"]
