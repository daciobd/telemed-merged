# render.yaml — Telemed (monorepo com 5 serviços)

services:
  # 0) Gateway Service - Always-on unified entry point
  - type: web
    name: telemed-gateway
    env: node
    region: ohio
    plan: starter
    autoDeploy: true
    rootDir: apps/telemed-gateway
    buildCommand: |
      if [ -f package-lock.json ]; then npm ci; else npm install --include=dev; fi
    startCommand: |
      npm start
    healthCheckPath: /health
    envVars:
      - key: NODE_VERSION
        value: 20
      - key: NODE_ENV
        value: production
      - key: INTERNAL_TOKEN
        sync: false

  # 1) Frontend principal
  - type: web
    name: telemed-deploy-ready
    env: node
    region: ohio
    plan: starter
    autoDeploy: true
    rootDir: apps/telemed-deploy-ready
    buildCommand: |
      if [ -f package-lock.json ]; then npm ci; else npm install --include=dev; fi
      npm run build
    startCommand: |
      npm run start
    healthCheckPath: /
    envVars:
      - key: NODE_VERSION
        value: 20
      - key: TELEMED_ENV
        value: production
      - key: TELEMED_API_BASE
        fromService:
          type: web
          name: telemed-internal
          property: host
      - key: DOCS_AUTOMATION_URL
        fromService:
          type: web
          name: telemed-docs-automation
          property: host
      - key: INTERNAL_TOKEN
        sync: false  # defina no dashboard (mesmo valor do docs-automation)
      - key: CORS_ORIGINS
        value: https://telemed.app

  # 2) Auction service (leilão reverso)
  - type: web
    name: auction-service
    env: node
    region: ohio
    plan: starter
    autoDeploy: true
    rootDir: apps/auction-service
    buildCommand: |
      if [ -f package-lock.json ]; then npm ci; else npm install --include=dev; fi
      npm run build
    startCommand: |
      npm run start
    healthCheckPath: /healthz
    envVars:
      - key: NODE_VERSION
        value: 20
      - key: INTERNAL_TOKEN
        sync: false
      - key: CORS_ORIGINS
        value: https://telemed.app,https://staging.telemed.app

  # 3) Backend interno (BFF/integrações)
  - type: web
    name: telemed-internal
    env: node
    region: ohio
    plan: starter
    autoDeploy: true
    rootDir: apps/telemed-internal
    buildCommand: |
      if [ -f package-lock.json ]; then npm ci; else npm install --include=dev; fi
      npm run build
    startCommand: |
      npm run start
    healthCheckPath: /healthz
    envVars:
      - key: NODE_VERSION
        value: 20
      - key: INTERNAL_TOKEN
        sync: false
      - key: CORS_ORIGINS
        value: https://telemed.app,https://staging.telemed.app
      # Exemplos de terceiros:
      - key: RECEITA_CERTA_API_URL
        sync: false
      - key: RECEITA_CERTA_API_KEY
        sync: false

  # 4) Serviço de produtividade (scribe, CIDs, follow-up)
  - type: web
    name: productivity-service
    env: node
    region: ohio
    plan: starter
    autoDeploy: true
    rootDir: apps/productivity-service
    buildCommand: |
      if [ -f package-lock.json ]; then npm ci; else npm install --include=dev; fi
      npm run build
    startCommand: |
      npm run start
    healthCheckPath: /healthz
    envVars:
      - key: NODE_VERSION
        value: 20
      - key: INTERNAL_TOKEN
        sync: false
      - key: CORS_ORIGINS
        value: https://telemed.app,https://staging.telemed.app

  # 5) **Docs Automation** (receitas/atestados + S3 + URLs assinadas)
  - type: web
    name: telemed-docs-automation
    env: node
    region: ohio
    plan: starter
    autoDeploy: true
    rootDir: apps/telemed-docs-automation
    buildCommand: |
      if [ -f package-lock.json ]; then npm ci; else npm install --include=dev; fi
      npm run build
    startCommand: |
      node dist/index.js
    healthCheckPath: /healthz
    envVars:
      - key: NODE_VERSION
        value: 20
      - key: INTERNAL_TOKEN
        sync: false
      - key: CORS_ORIGINS
        value: https://telemed.app,https://staging.telemed.app
      # AWS / S3 (produção)
      - key: AWS_REGION
        value: us-east-1
      - key: AWS_ACCESS_KEY_ID
        sync: false
      - key: AWS_SECRET_ACCESS_KEY
        sync: false
      - key: S3_BUCKET
        value: telemed-docs
      - key: S3_PREFIX
        value: docs/
      - key: SIGNED_URL_TTL_SECONDS
        value: "900"
      # Integração Receita Certa (opcional aqui, pode ficar no telemed-internal)
      - key: RECEITA_CERTA_API_URL
        sync: false
      - key: RECEITA_CERTA_API_KEY
        sync: false

# Background jobs
cronJobs:
  # Job de limpeza de logs (compliance 30 dias)
  - name: telemed-logs-cleanup
    schedule: "0 */6 * * *"  # A cada 6 horas
    env: node
    region: ohio
    plan: starter
    rootDir: apps/telemed-internal
    buildCommand: |
      if [ -f package-lock.json ]; then npm ci; else npm install; fi
      npx prisma generate
    startCommand: node src/cleanup-job.js
    envVars:
      - key: NODE_VERSION
        value: 20
      - key: NODE_ENV
        value: production
      - key: DATABASE_URL
        fromDatabase:
          name: telemed-postgres
          property: connectionString